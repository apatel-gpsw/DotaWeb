@model DotaWeb.Models.MatchDetailsModel
@{
	ViewBag.Title = "Home Page";
}
@*enctype = "multipart/form-data",*@

@using (Html.BeginForm("GetMatchData", "Home", FormMethod.Get))
{
	@*<script language="javascript" type="text/javascript" src="~/Scripts/jquery-3.3.1.intellisense.js"></script>*@
	<script language="javascript" type="text/javascript" src="~/Scripts/jquery-3.3.1.min.js"></script>
	<script>
		function Toggle() {
			var acc = $(".accordion");
			var i;

			for (i = 0; i < acc.length; i++) {
				acc[i].addEventListener("click", function () {
					this.classList.toggle("active");
					var panel = this.nextElementSibling;
					if (panel.style.display === "block") {
						panel.style.display = "none";
					} else {
						panel.style.display = "block";
					}
				});
			}
		}
		$(document).ready(function () {
			Toggle();
			$(".accordion").trigger("click");

			if (document.referrer.indexOf(document.location.href) == 0)
				$(".accordion").trigger("click");

			$('#searchButton').click(function () {
				var isValid = false;
				var errorList = [];
				errorList.push('Enter a valid Match ID or Player ID.');

				var matchID = $('#matchID').val();
				var playerID = $('#playerID').val();

				if (!matchID && !playerID)
					alert("Please enter and ID in at least one of the textboxes.");
				else if (!$.isNumeric(matchID) && !$.isNumeric(playerID))
					alert("Only numeric values are allowed.")
				else
					isValid = true;

				//alert('yes');
				//if (isValid) {
				//	$.ajax({
				//		type: "POST",
				//		url: "/Home/GetMatchData",
				//		contentType: 'application/json',
				//		dataType: "json",
				//		data: JSON.stringify({
				//			'matchID': matchID, 'playerID': playerID
				//		}),
				//		success: function (returnValue) {
				//			alert(returnValue);
				//			alert('Success');
				//		}
				//	});
				//}
			});
		});
	</script>

	<div class="jumbotron">
		<h1 class="accordion">Search match/player</h1>
		<div class="form-horizontal">
			<div class="form-group">
				@Html.Label("Match ID", "Match ID", new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBox("Match ID", null, new { @id = "matchID", @class = "form-control" }) 4169885095
				</div>
			</div>
			<div class="form-group">
				@Html.Label("Player ID", "Player ID", new { @class = "col-md-2 control-label" })
				<div class="col-md-10">
					@Html.TextBox("Player ID", null, new { @id = "playerID", @class = "form-control" })
				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" id="searchButton" value="Search &raquo;" class="btn btn-primary btn-lg">
				</div>
			</div>
		</div>
	</div>

	@*@{*@
	if (@ViewBag.ShowList)
	{
		@Html.DisplayFor(model => model.Game_Mode)
		@Html.DisplayFor(model => model.Duration, "Duration")
		<div>
			<table id="fieldTable" style="width: 100%" class="table">
				<tr>
					<th>
						Hero
					</th>
					<th>
						Player
					</th>
					<th>
						Kills
					</th>
					<th>
						Deaths
					</th>
					<th>
						Assists
					</th>
					<th>
						Net Worth
					</th>
					<th>
						LH/DN
					</th>
					<th>
						GPM/XPM
					</th>
					<th>
						Damage (Hero/Tower)
					</th>
					<th>
						Heal
					</th>
				</tr>
				@{
					int i = 0;
					string style;
					foreach (var item in Model.Players)
					{
						i++;
						if (i < 6)
						{
							style = "radiant";
						}
						else
						{
							style = "dire";
						}
						<tr>
							<td>
								<div class=@style>
									@Html.DisplayFor(modelItem => item.Name)
								</div>
							</td>
							<td>
								@*@Html.DisplayNameFor(model => model.Game_Mode)*@
								<div class=@style>
									@Html.DisplayFor(modelItem => item.PlayerName)
								</div>
							</td>
							<td>
								<div class=@style>
									@Html.DisplayFor(modelItem => item.Kills)
								</div>
							</td>
							<td>
								<div class=@style>
									@Html.DisplayFor(modelItem => item.Deaths)
								</div>
							</td>
							<td>
								<div class=@style>
									@Html.DisplayFor(modelItem => item.Assists)
								</div>
							</td>
							<td>
								@{ var netWorth = (item.Gold * Model.Duration / 1000) + "K";
									<div class=@style>
										@Html.DisplayFor(modelItem => netWorth)
									</div>
								}
							</td>
							<td>
								@{
									var lhdn = item.Last_Hits + " / " + item.Denies;
									<div class=@style>
										@Html.DisplayFor(modelItem => lhdn)
									</div>
								}
							</td>
							<td>
								@{
									var gpxp = item.Gold_Per_Min + " / " + item.Xp_Per_Min;
									<div class=@style>
										@Html.DisplayFor(modelItem => gpxp)
									</div>
								}
							</td>
							<td>
								@{
									var damage = item.Hero_Damage + " / " + item.Tower_Damage;
									<div class=@style>
										@Html.DisplayFor(modelItem => damage)
									</div>
								}
							</td>
							<td>
								<div class=@style>
									@Html.DisplayFor(modelItem => item.Hero_Healing)
								</div>
							</td>
						</tr>
					}

				}
			</table>
		</div>
	}
}
		LOL

<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
	.accordion {
		background-color: #eee;
		color: #444;
		cursor: pointer;
		padding: 18px;
		width: 100%;
		border: none;
		text-align: left;
		outline: none;
		font-size: 15px;
		transition: 0.4s;
	}

		.active, .accordion:hover {
			background-color: #ccc;
		}

	.panel {
		padding: 0 18px;
		display: none;
		background-color: white;
		overflow: hidden;
	}
</style>
